论文：矩阵分解Matrix Factorization Techniques for Recommender Systems

推荐系统领域第一篇比较正式、全面介绍融合了机器学习技术的矩阵分解算法，对于近几年基于矩阵分解的推荐算法的研究起到了非常大的影响，

论文所介绍的核心算法无论是在理论理解还是编程实现上都是比较容易的，这也符合“一个好的数学模型一定是简单的”的原则


特征分解的前提条件是待分解矩阵必须是可对角化的方阵，然而在实际应用中我们大多数用来进行操作的矩阵都是非方阵，所以特征分解本身用途并不广，那么如果我们想把非方阵的矩阵分解要用什么方法呢？于是后来就有了奇异值分解（SVD）法。

矩阵的奇异值从大到小的衰减速度是非常快的，第一个奇异值就占了所有奇异值综合的绝大部分。所以我们完全可以用第一个奇异值去代替全部的奇异值，这个方法可以扩展到非常大的矩阵SVD中，比如用前10个奇异值去代替全部的1000个奇异值，这样就可以大幅度压缩原矩阵。


目前有三大主流算法作为几乎全部的推荐算法的基石，它们就是
	基于内容的过滤算法（content-based filtering，简称CBF）、
	邻域算法（neighborhood methods）、
	隐语义模型（latent factor models，简称LFM），

	其中后两者统称为协同过滤算法（collaborative filtering，简CF）。


三种主流算法：
	CBF通过给用户、物品定义显式的属性（通常会找所涉及的推荐领域的人类专家来定义）来描述他们的本质，然后为用户推荐与他们本质“门当户对”的物品；

	CF则是通过发动“群体的力量”，从其他用户、物品中学习到宝贵的信息，无需显式地定义属性：
		
		CF下的邻域算法着重于学习用户与用户、物品与物品之间的关系，为目标用户推荐与目标用户相似的用户所选择的物品（user-based）或者与目标用户所选择的物品相似的物品（item-based）；

		CF下的隐语义模型则是通过学习用户与用户、物品与物品之间的关系来自动获得用户、物品的隐属性（这里的“隐”指的是学习到的属性是不可解释的），相当于把用户-评分矩阵分解成用户隐属性矩阵和物品隐属性矩阵，然后通过用户隐属性向量u与物品隐属性向量i作点乘来获取到该用户对该物品的评分，以此为依据进行推荐。




矩阵分解的主要思想
	矩阵分解是构建隐语义模型的主要方法，即通过把整理、提取好的“用户—物品” {评分矩阵} 进行分解， 来得到一个 用户隐向量矩阵 和一个 物品隐向量矩阵 。

	假设现在有一个M * N的矩阵，M代表用户数，N代表物品数，想将用户、物品分别训练出两个隐属性，即每个用户、每个物品都对应着一个二维向量，即得到了一个M * 2的用户隐向量矩阵和一个N * 2 的矩阵
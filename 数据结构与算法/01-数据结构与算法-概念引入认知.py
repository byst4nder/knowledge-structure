01-数据结构与算法-概念引入认知

1、算法认知：
	语言是工具。兵器。
	数据结构和算法是内功。兵法。
	业务需求是招式。

	算法是独立存在的一种解决问题的方法和思想。


	时间复杂度：大O记法：

	执行时间测试模块：timeit模块、
	class timeit.Timer(stmt='pass', setup='pass', timer=<timer function>)

	t1 = Timer("test1()", "from __main__ import test1")
	print("concat ",t1.timeit(number=1000), "seconds")

2、数据结构的认知

	数据保存的结构不一样，那么调用数据的算法复杂度也不一样。
	不同 数据的 组织方式 称为数据结构。 

	数据结构解决的是一组 数据如何保存 的问题。组织形式是什么样子的。
	描述的是：数据结构指的是数据对象中数据元素之间的关系。
	
	列表，字典都是python中封装的高级数据结构。数据结构就是对基本数据类型的一次封装。基本数据类型：int，float,char。


3、算法与数据结构之间的区别


	算法关注的是去解决问题的思路，
	数据结构关注数据保存形式。

	程序 = 数据结构 + 算法

	总结：算法是为了解决实际问题而设计的，数据结构是算法需要处理的问题载体



4、抽象数据类型：(ADT)
	
	就是把数据类型和其所支持的操作封装在一起。有面向对象的感觉。
	class Data(object):
		def add(self):
		def pop:
		def sort
		def modify




02-数据结构与算法-线性表

一组元素看成一个序列：抽象成线性表。
线性表：
	· 顺序表，	将元素顺序地存放在一块连续的存储区里，元素间的顺序关系由它们的存储顺序自然表示。
	· 链表， 	将元素存放在通过 链接 构造起来的一系列存储块中。



1、顺序表：
	列表中的下标实际上记录的是偏移量，偏移多少个单位，此时注意一点，偏移量指的是单位，而偏移单位大小有两种情况：元素存储区大小不同。
		（1）偏移单位大小相同：一体式结构
		（2）偏移单位大小不同：分离式结构
			动态顺序表：
				采用分离式结构的顺序表，若将数据区更换为存储空间更大的区域，则可以在不改变表对象的前提下对其数据存储区进行了扩充，所有使用这个表的地方都不必修改。只要程序的运行环境（计算机系统）还有空闲存储，这种表结构就不会因为满了而导致操作无法进行。

			元素存储区扩充中的哲学：
			··增加固定数目：		以时间换空间。
			··容量加倍：			以空间换时间。

	Python中的顺序表:list 和 tuple。
		list就是一种采用分离式技术实现的动态顺序表
		

2、链表
	顺序表的构建需要预先知道数据大小来申请连续的存储空间，而在进行扩充时又需要进行数据的搬迁。

	链表：在每一个节点（数据存储单元）里存放下一个节点的位置信息（即地址）。

	（1）单向链表：包含两个域，一个信息域（元素域）和一个链接域。
			表元素域elem用来存放具体的数据。
			链接域next用来存放下一个节点的位置（python中的标识）
			变量p指向链表的头节点（首节点）的位置，从p出发能找到表中的任意节点。


	（2）单项循环链表：
			链表中最后一个节点的next域不再为None，而是指向链表的头节点。


	（3）双向链表：
			每个节点有两个链接：一个指向前一个节点，当此节点为第一个节点时，指向空值；而另一个指向下一个节点，当此节点为最后一个节点时，指向空值。



3、栈（stack）
	它的特点在于只能允许在容器的一端（称为栈顶端指标，英语：top）进行加入数据（英语：push）和输出数据（英语：pop）的运算。
	没有了位置概念，保证任何时候可以访问、删除的元素都是此前最后存入的那个元素，确定了一种默认的访问顺序。

	后进先出（LIFO, Last In First Out）





4、队列：
	队列（queue）是只允许在一端进行插入操作，而在另一端进行删除操作的线性表。
	先进先出的（First In First Out）的线性表，简称FIFO。
	


